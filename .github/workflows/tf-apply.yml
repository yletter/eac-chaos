name: Terraform EAC Chaos Creation

on:
  push:
    branches:
      - mainx  # Change this to your main branch name if different
  repository_dispatch:
    types: [trigger-k8s-apply]
    
jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.1.7

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: AWS 
      shell: bash
      run: |
        env
        aws s3 ls

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      env:
        TF_VAR_mysql_username: ${{ secrets.TF_VAR_MYSQL_USERNAME }}
        TF_VAR_mysql_password: ${{ secrets.TF_VAR_MYSQL_PASSWORD }}
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      env:
        TF_VAR_mysql_username: ${{ secrets.TF_VAR_MYSQL_USERNAME }}
        TF_VAR_mysql_password: ${{ secrets.TF_VAR_MYSQL_PASSWORD }}
      run: terraform apply --auto-approve

    - name: Get Terraform output
      run: |
        echo "DB_HOSTNAME=$(terraform output -raw aurora_endpoint | cut -f1 -d:)" >> $GITHUB_ENV
        echo "DB_PORT=$(terraform output -raw aurora_endpoint | cut -f2 -d:)" >> $GITHUB_ENV

    - name: Checkout config repo
      uses: actions/checkout@v4
      with:
        repository: yletter/config-store
        token: ${{ secrets.YGITHUB_TOKEN }}
        path: config-store

    - name: Update config file
      run: |
        cd ../config-store
        sed -i "s/^mysql\.hostname=.*/mysql.hostname=$DB_HOSTNAME/" application.properties
        sed -i "s/^mysql\.port=.*/mysql.port=$DB_PORT/" application.properties

    - name: Commit and push changes
      run: |
        cd ../config-store
        DIFF=$(git diff | wc -l)  # Count the number of changed lines
        if [ "$DIFF" -gt 0 ]; then
          git config user.name "yuvarajengineer"
          git config user.email "yuvarajengineer@gmail.com"
          git add application.properties
          git commit -m "Updated MySQL hostname to ${{ env.DB_HOSTNAME }} and port to ${{ env.DB_PORT }}"
          git push origin main
        else
          echo "No changes detected. Skipping commit and push."
        fi
        
    - name: Archive Terraform Plan
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: terraform/tfplan

    - name: Deploy Applications
      run: |
        # Install Kubectl
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        kubectl version --client
    
        # Install Helm
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        helm version

        cd ..
        mkdir deploy
        cd deploy
        aws eks update-kubeconfig --region us-east-1 --name chaos-cluster
        
        git clone https://github.com/yletter/chaos-helm

        cd chaos-helm
        cd charts
        helm upgrade --install gateway gateway
        helm upgrade --install user-service user-service
        kubectl get svc
        kubectl get deployments
        helm status gateway 
        helm list
